swagger: "2.0"
info:
  description: "This is the API for URL Location Scheme v1"
  version: "1.0.0"
  title: "SimpleHTTP - LocationScheme URL v1"
host: "my.wave.provider"
basePath: "/v1"
schemes:
- "https"
paths:
  /obj:
    post:
      summary: "Add a new object"
      description: "Adds a new DER encoded WaveObject to the store"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "DER encoded WaveObject"
        required: true
        schema:
          $ref: "#/definitions/PutObjectRequest"
      responses:
        200:
          description: "Valid input"
          schema:
            $ref: "#/definitions/PutObjectResponse"
        400:
          description: "Invalid input"
        500:
          description: "Server error"
  /obj/{hash}:
    get:
      summary: "Get an object by hash"
      description: "Retrieves a DER encoded WaveObject by hash"
      produces:
      - "application/json"
      parameters:
      - name: "hash"
        in: "path"
        description: "Base64 encoding of a hash returned by POST /obj"
        required: true
        type: "string"
        format: "byte"
      - name: "scheme"
        in: "query"
        description: "OID of the hash scheme used"
        type: "string"
        format: "oid"
      responses:
        404:
          description: "No such object exists"
          schema:
            $ref: "#/definitions/NoSuchObjectResponse"
        200:
          description: "Object found"
          schema:
            $ref: "#/definitions/ObjectResponse"
        500:
          description: "Server error"
  /queue:
    post:
      summary: "Enqueue an object notification"
      description: "Places the given hash in the given queue"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "content"
        in: "body"
        schema:
          $ref: "#/definitions/EnqueueRequest"
      responses:
        200:
          description: "Queue entry accepted"
          schema:
            $ref: "#/definitions/EnqueueResponse"
        500:
          description: "Server error"
  /queue/{id}:
    get:
      summary: "Retrieve a queue entry"
      description: "Retrieve a queue entry identified by the queue id and the token"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: id
        in: path
        description: "Base64 encoding of a hash identifying a queue"
        required: true
        type: "string"
        format: "byte"
      - name: token
        in: query
        description: "A token indicating which element of the queue to retrieve"
        type: "string"
      - name: scheme
        in: query
        description: "An OID indicating the hash scheme"
        type: "string"
      responses:
        404:
          description: "No such object exists"
          schema:
            $ref: "#/definitions/NoSuchQueueEntryResponse"
        200:
          description: "Queue entry found"
          schema:
            $ref: "#/definitions/IterateQueueResponse"
        500:
          description: "Server error"
definitions:
  PutObjectRequest:
    type: object
    properties:
      der:
        description: "base64+DER encoded WaveObject to be submitted to the storage"
        type: string
        format: binary
  PutObjectResponse:
    type: object
    properties:
      hashScheme:
        description: "a string OID identifying the hash scheme used by the storage"
        type: string
      hash:
        description: "base64 encoded hash contents"
        type: string
        format: binary
  ObjectResponse:
    type: object
    properties:
      der:
        description: "base64+DER encoded WaveObject"
        type: string
        format: binary
  NoSuchObjectResponse:
    type: object
  IterateQueueResponse:
    type: object
    properties:
      hashScheme:
        description: "a string OID identifying the hash scheme used by the storage"
        type: string
      hash:
        description: "base64 encoded hash contents"
        type: string
        format: binary
      nextToken:
        description: "the token of the next element"
        type: string
  EnqueueResponse:
    type: object
  NoSuchQueueEntryResponse:
    type: object
  EnqueueRequest:
    type: object
    properties:
      idHashScheme:
        description: "a string OID identifying the hash scheme used by idHash"
        type: string
      idHash:
        description: "base64 encoded queue identifier"
        type: string
        format: binary
      entryHashScheme:
        description: "a string OID identifying the hash scheme used by the entry"
        type: string
      entryHash:
        description: "base64 encoded entry hash contents"
        type: string
        format: binary
